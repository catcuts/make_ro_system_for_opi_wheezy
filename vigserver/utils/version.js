/*ã€€China Fujian Huanyutong Technology Co., Ltd. */
const{updateYamlFile:updateYamlFile,readYamlFile:readYamlFile}=require("./yaml"),path=require("path"),fs=require("fs"),{queryJson:queryJson}=require("./jsonfuncs"),{StorageDocument:StorageDocument}=require("../core/storage");async function getStorageDocument(e){let n=new StorageDocument(e);return await n.open(),n}function normalizeVersion(e){e=String(e);let[n,o,r]=e.split(".");return(n=void 0===n?0:n)+"."+(o=void 0===o?0:o)+"."+(r=void 0===r?0:r)}function compareVersion(e,n){e=normalizeVersion(e),n=normalizeVersion(n);let[o,r,t]=e.split("."),[s,i,a]=n.split(".");return e===n?0:parseInt(o)>parseInt(s)?1:parseInt(o)<parseInt(s)?-1:parseInt(r)>parseInt(i)?1:parseInt(r)<parseInt(i)?-1:parseInt(t)>parseInt(a)?1:parseInt(t)<parseInt(a)?-1:0}async function syncVersionInfo(){if(!fs.existsSync(path.join(VIGConsts.VIGRootFolder,"version.json")))return;let e,n,o;try{o=await VIGStorage.openDocument("devices"),e=normalizeVersion((await o.findOne({__host__:!0})).version)}catch(e){logger.warn(_("Cannot update version info"))}compareVersion(e,n=normalizeVersion(require("../version.json").version))<0&&(await o.update({__host__:!0},{$set:{version:n}}),updateYamlFile(path.join(VIGConsts.Folders.initdata,"devices.yaml"),"records[?(@.sn=='__host__')].version",n),logger.debug(_("Version update to:{ver}").params(n)),e=n),logger.debug(_("Current version:{ver}").params(e))}async function updateVersion(e){let n,o;if(n=normalizeVersion(e),fs.existsSync(path.join(VIGConsts.DataRootFolder,"storage","devices.dat"))){try{o=await getStorageDocument("devices")}catch(e){console.log("Cannot update version to devices.dat:"+e.message)}await o.update({__host__:!0},{$set:{version:n}})}fs.existsSync(path.join(VIGConsts.DataRootFolder,"initdata","devices.dat"))&&updateYamlFile(path.join(VIGConsts.Folders.initdata,"devices.yaml"),"records[?(@.sn=='__host__')].version",n)}function addVersion(e,n="revision"){let o=normalizeVersion(e),[r,t,s]=o.split(".");return"revision"===n?s=String(parseInt(s)+1):"minor"===n?t=String(parseInt(t)+1):r=String(parseInt(r)+1),r+"."+t+"."+s}async function getCurrentVersion(){let e,n,o=path.join(VIGConsts.VIGRootFolder,"version.json");if(fs.existsSync(o))try{let n=require(o);e=queryJson(n,"version")}catch(e){console.log("version.json is invalid.")}if(!e){try{n=await getStorageDocument("devices"),e=(await n.findOne({__host__:!0})).version}catch(e){console.log("Cannot read version info from devices")}if(!e){let n=readYamlFile(path.join(VIGConsts.DataRootFolder,"initdata","devices.yaml"));e=queryJson(n.json,"records[?(@.__host__==true)].version")}}return normalizeVersion(e)}module.exports={getCurrentVersion:getCurrentVersion,syncVersionInfo:syncVersionInfo,normalizeVersion:normalizeVersion,addVersion:addVersion,updateVersion:updateVersion,compareVersion:compareVersion};